name: "Build and Deploy to Cloud Run"

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: "moonlit-autumn-475702-p8"
  REGION: "us-central1"
  BACKEND_SERVICE: "backend-service"
  FRONTEND_SERVICE: "frontend-service"
  WORKLOAD_IDENTITY_PROVIDER: "projects/703041068737/locations/global/workloadIdentityPools/github-pool/providers/github-provider"

jobs:
  deploy:
    runs-on: "ubuntu-latest"
    permissions:
      contents: "read"
      id-token: "write"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v4"

      - name: "Apply paths filter"
        uses: "dorny/paths-filter@v3"
        id: "filter"
        with:
          filters: |
            backend:
              - "backend/**"
            frontend:
              - "frontend/**"

      - id: "auth"
        name: "Authenticate to Google Cloud"
        uses: "google-github-actions/auth@v2"
        with:
          workload_identity_provider: "${{ env.WORKLOAD_IDENTITY_PROVIDER }}"
          service_account: "github-actions-sa@${{ env.PROJECT_ID }}.iam.gserviceaccount.com"
          project_id: "${{ env.PROJECT_ID }}"
          token_format: "access_token"
          create_credentials_file: true

      - name: "Docker Auth"
        uses: "docker/login-action@v3"
        with:
          username: "oauth2accesstoken"
          password: "${{ steps.auth.outputs.access_token }}"
          registry: "${{ env.REGION }}-docker.pkg.dev"

      # Build and deploy backend first
      - name: "Build and Push Backend Container"
        if: steps.filter.outputs.backend == 'true'
        working-directory: ./backend
        run: |-
          DOCKER_TAG="${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/cloudrun-backend/backend:${{ github.sha }}"
          docker build --tag "${DOCKER_TAG}" .
          docker push "${DOCKER_TAG}"

      - name: "Deploy Backend to Cloud Run"
        if: steps.filter.outputs.backend == 'true'
        id: deploy-backend
        uses: "google-github-actions/deploy-cloudrun@v2"
        with:
          service: "${{ env.BACKEND_SERVICE }}"
          region: "${{ env.REGION }}"
          image: "${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/cloudrun-backend/backend:${{ github.sha }}"
          flags: "--allow-unauthenticated"

      - name: "Get Backend URL"
        id: get-backend-url
        run: |
          BACKEND_URL=$(gcloud run services describe ${{ env.BACKEND_SERVICE }} --region ${{ env.REGION }} --format='value(status.url)')
          echo "BACKEND_URL=$BACKEND_URL" >> $GITHUB_ENV
          echo "Current Backend URL: $BACKEND_URL"

      # Build and deploy frontend
      - name: "Build and Push Frontend Container"
        if: steps.filter.outputs.frontend == 'true'
        working-directory: ./frontend
        env:
          VITE_API_URL: "${{ env.BACKEND_URL }}"
        run: |-
          # Create .env file with backend URL
          echo "VITE_API_URL=$VITE_API_URL" > .env
          DOCKER_TAG="${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/cloudrun-frontend/frontend:${{ github.sha }}"
          docker build \
            --build-arg VITE_API_URL=$VITE_API_URL \
            --tag "${DOCKER_TAG}" .
          docker push "${DOCKER_TAG}"

      - name: "Deploy Frontend to Cloud Run"
        if: steps.filter.outputs.frontend == 'true'
        id: deploy-frontend
        uses: "google-github-actions/deploy-cloudrun@v2"
        with:
          service: "${{ env.FRONTEND_SERVICE }}"
          region: "${{ env.REGION }}"
          image: "${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/cloudrun-frontend/frontend:${{ github.sha }}"
          flags: "--allow-unauthenticated"

      # Show output URLs
      - name: "Show output"
        run: |
          echo "Backend URL: ${{ env.BACKEND_URL }}"
          echo "Frontend URL: ${{ steps.deploy-frontend.outputs.url }}"
